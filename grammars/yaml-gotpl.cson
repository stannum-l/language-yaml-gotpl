'scopeName': 'text.yaml-gotpl'
'name': 'YAML-based Go Template'
'foldingStartMarker': '\\{\\{\\s*(?:if|with|range)\\b'
'foldingStopMarker': '\\{\\{\\s*(?:else|end)\\b'
'fileTypes': [
  '.yaml.tpl'
  '.yml.tpl'
]
'patterns': [
  {
    'include': '#erb'
  }
  {
    'include': '#comment'
  }
  {
    'match': '\\t+'
    'name': 'invalid.illegal.whitespace.yaml'
  }
  {
    'match': '^---'
    'name': 'punctuation.definition.directives.end.yaml'
  }
  {
    'match': '^\\.\\.\\.'
    'name': 'punctuation.definition.document.end.yaml'
  }
  {
    'include': '#variables'
  }
  {
    'include': '#strings'
  }
  {
    'include': '#templates'
  }
]
'repository':
  'string_placeholder':
    'patterns': [
      {
        'name': 'constant.other.placeholder.gotemplate'
        'match': '(?x)%\n                        (\\d+\\$)?                                    # field (argument #)\n                        [#0\\- +\']*                                  # flags\n                        [,;:_]?                                     # separator character (AltiVec)\n                        ((-?\\d+)|\\*(-?\\d+\\$)?)?                     # minimum field width\n                        (\\.((-?\\d+)|\\*(-?\\d+\\$)?)?)?                # precision\n                        [diouxXDOUeEfFgGaAcCsSqpnvtTbyYhHmMzZ%]     # conversion type\n                    '
      }
      {
        'name': 'invalid.illegal.placeholder.gotemplate'
        'match': '%'
      }
    ]
  'string_escaped_char':
    'patterns': [
      {
        'name': 'constant.character.escape.gotemplate'
        'match': '\\\\(\\\\|[abfnrtv\'"]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8}|[0-7]{3})'
      }
      {
        'name': 'invalid.illegal.unknown-escape.gotemplate'
        'match': '\\\\.'
      }
    ]
  'comment':
    'patterns': [
      {
        'begin': '#'
        'beginCaptures': 'punctuation.definition.comment.yaml-gotpl'
        'end': '$\\n?'
        'name': 'comment.line.number-sign.yaml-gotpl'
      }
    ]
  'numeric':
    'match': '(((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?)\\s*($|(?=#)(?!#{))'
    'captures':
      '1':
        'name': 'constant.numeric.yaml'
  'templates': [
    'patterns': [
      {
        'begin': '\\{\\{'
        'beginCaptures':
          '0':
            'name': 'punctuation.section.embedded.begin.gotemplate'
        'end': '\\}\\}'
        'endCaptures':
          '0':
            'name': 'punctuation.section.embedded.end.gotemplate'
        'patterns': [
          {
            'name': 'keyword.operator.initialize.gotemplate'
            'match': ':='
          }
          {
            'name': 'keyword.operator.pipe.gotemplate'
            'match': '\\|'
          }
          {
            'name': 'variable.other.gotemplate'
            'match': '[.$][\\w]*'
          }
          {
            'name': 'keyword.control.gotemplate'
            'match': '\\b(if|else|range|template|with|end|nil|with|define)\\b'
          }
          {
            'name': 'support.function.builtin.gotemplate'
            'match': '\\b(and|call|html|index|js|len|not|or|print|printf|println|urlquery|eq|ne|lt|le|gt|ge)\\b'
          }
          {
            'name': 'comment.block.gotemplate'
            'begin': '/\\*'
            'end': '\\*/'
          }
        ]
      }
    ]
  ]
  'strings':
    'patterns': [
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.yaml'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.yaml'
        'name': 'string.quoted.double.yaml'
        'patterns': [
          {
            'include': '#escape_char'
          }
          {
            'include': '#erb'
          }
        ]
      }
      {
        'begin': "'"
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.yaml'
        'end': "'"
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.yaml'
        'name': 'string.quoted.single.yaml'
        'patterns': [
          {
            'match': "''"
            'name': 'constant.character.escape.yaml'
          }
          {
            'include': '#erb'
          }
        ]
      }
      {
        'begin': '`'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.yaml'
        'end': '`'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.yaml'
        'name': 'string.interpolated.yaml'
        'patterns': [
          {
            'include': '#escape_char'
          }
          {
            'include': '#erb'
          }
        ]
      }
      {
        'match': '[^\\s"\'\\n](?!\\s*#(?!{))([^#\\n]|((?<!\\s)#))*'
        'name': 'string.quoted.double.yaml'
      }
    ]
  'scalar-content':
    'patterns': [
      {
        'include': '#nocomment'
      }
      {
        'include': '#constants'
      }
      {
        'include': '#numeric'
      }
      {
        'include': '#strings'
      }
      {
        'match': '!(?=\\s)'
        'name': 'punctuation.definition.tag.non-specific.yaml'
      }
    ]
  'variables':
    'captures':
      '1':
        'name': 'punctuation.definition.variable.yaml'
    'match': '(&|\\*)\\w+$'
    'name': 'variable.other.yaml'
